name: sub - browser test chiller
on: 
  workflow_call:
    inputs:
      sha-api:
        description: 'SHA uesd to identify version of api image'
        default: ${{ github.sha }}
        required: false
        type: string
      sha-fe:
        description: 'SHA uesd to identify version of frontend image'
        default: ${{ github.sha }}
        required: false
        type: string
      registry:
        default: ghcr.io
        required: false
        type: string
      namespace:
        default: lago-morph
        required: false
        type: string

env:
  POSTGRES_PASSWORD: some_string_I_guess
  CHILLER_DB: chiller

jobs:
  chiller-test-int:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.3-alpine
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.CHILLER_DB }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
            
      chiller-api:
        image: ${{ inputs.registry }}/${{ inputs.namespace }}/chiller_api:sha-${{ inputs.sha-api }}
        env:
          CHILLER_DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          CHILLER_DB_HOST: postgres
        ports:
          - 8080:80
            
      chiller-frontend:
        image: ${{ inputs.registry }}/${{ inputs.namespace }}/chiller_frontend:sha-${{ inputs.sha-fe }}
        env:
          CHILLER_HOST: chiller-api
        ports:
          - 8223:80

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install psql
        run: sudo apt install postgresql-client
          
      - name: Create DB tables
        run: psql -f api/chiller_api/db/schema.sql
        env:
          PGHOST: localhost
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
          PGUSER: postgres
          PGDATABASE: ${{ env.CHILLER_DB }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: update pip and install pytest
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest

      - name: Install Selenium driver
        run: sudo apt install python3-selenium

      # I am confused about why I also have to do this, but whatever
      - name: Install python selenium package
        run: python -m pip install selenium
          
      - name: Test with pytest and selenium
        run: CHILLER_HOST=127.0.0.1 CHILLER_PORT=8223 pytest frontend/browser_tests
